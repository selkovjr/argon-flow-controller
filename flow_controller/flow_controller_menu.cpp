/*
    The code in this file uses open source libraries provided by thecoderscorner

    DO NOT EDIT THIS FILE, IT WILL BE GENERATED EVERY TIME YOU USE THE UI DESIGNER
    INSTEAD EITHER PUT CODE IN YOUR SKETCH OR CREATE ANOTHER SOURCE FILE.

    All the variables you may need access to are marked extern in this file for easy
    use elsewhere.
 */

#include <tcMenu.h>
#include "flow_controller_menu.h"
#include "ThemeCoolBlueTraditional.h"

// Global variable declarations

const PROGMEM  ConnectorLocalInfo applicationInfo = { "Flow Controller", "199cce66-f29b-498d-8e00-8a1bf2f7b772" };
AdafruitDrawable displayDrawable(&display);
GraphicsDeviceRenderer renderer(30, applicationInfo.name, &displayDrawable);

// Global Menu Item declarations

const PROGMEM AnalogMenuInfo minfotalkInterval = { "Interval", 27, 0xffff, 60, onTalkIntervalChange, 10, 1, "s" };
AnalogMenuItem menutalkInterval(&minfotalkInterval, 0, NULL);
const PROGMEM BooleanMenuInfo minfoTalkEnable = { "Enable", 26, 0xffff, 1, onTalkEnableChange, NAMING_YES_NO };
BooleanMenuItem menuTalkEnable(&minfoTalkEnable, false, &menutalkInterval);
RENDERING_CALLBACK_NAME_INVOKE(fnTalkRtCall, backSubItemRenderFn, "Talk", -1, NO_CALLBACK)
const PROGMEM SubMenuInfo minfoTalk = { "Talk", 25, 0xffff, 0, NO_CALLBACK };
BackMenuItem menuBackTalk(fnTalkRtCall, &menuTalkEnable);
SubMenuItem menuTalk(&minfoTalk, &menuBackTalk, NULL);
const char enumStrTriggerMode_0[] PROGMEM = "T2";
const char enumStrTriggerMode_1[] PROGMEM = "T4";
const char* const enumStrTriggerMode[] PROGMEM  = { enumStrTriggerMode_0, enumStrTriggerMode_1 };
const PROGMEM EnumMenuInfo minfoTriggerMode = { "Trigger mode", 28, 0xffff, 1, onTriggerModeChange, enumStrTriggerMode };
EnumMenuItem menuTriggerMode(&minfoTriggerMode, 0, &menuTalk);
const char enumStrCutOffLevel_0[] PROGMEM = "50% setpoint";
const char enumStrCutOffLevel_1[] PROGMEM = "55% setpoint";
const char enumStrCutOffLevel_2[] PROGMEM = "60% setpoint";
const char enumStrCutOffLevel_3[] PROGMEM = "65% setpoint";
const char enumStrCutOffLevel_4[] PROGMEM = "70% setpoint";
const char enumStrCutOffLevel_5[] PROGMEM = "75% setpoint";
const char enumStrCutOffLevel_6[] PROGMEM = "80% setpoint";
const char enumStrCutOffLevel_7[] PROGMEM = "85% setpoint";
const char* const enumStrCutOffLevel[] PROGMEM  = { enumStrCutOffLevel_0, enumStrCutOffLevel_1, enumStrCutOffLevel_2, enumStrCutOffLevel_3, enumStrCutOffLevel_4, enumStrCutOffLevel_5, enumStrCutOffLevel_6, enumStrCutOffLevel_7 };
const PROGMEM EnumMenuInfo minfoCutOffLevel = { "Kill at", 24, 0xffff, 7, onCutOffLevelChange, enumStrCutOffLevel };
EnumMenuItem menuCutOffLevel(&minfoCutOffLevel, 0, &menuTriggerMode);
const char enumStrWarnAt_0[] PROGMEM = "50% setpoint";
const char enumStrWarnAt_1[] PROGMEM = "60% setpoint";
const char enumStrWarnAt_2[] PROGMEM = "70% setpoint";
const char enumStrWarnAt_3[] PROGMEM = "80% setpoint";
const char enumStrWarnAt_4[] PROGMEM = "85% setpoint";
const char enumStrWarnAt_5[] PROGMEM = "90% setpoint";
const char enumStrWarnAt_6[] PROGMEM = "95% setpoint";
const char* const enumStrWarnAt[] PROGMEM  = { enumStrWarnAt_0, enumStrWarnAt_1, enumStrWarnAt_2, enumStrWarnAt_3, enumStrWarnAt_4, enumStrWarnAt_5, enumStrWarnAt_6 };
const PROGMEM EnumMenuInfo minfoWarnAt = { "Warn at", 23, 0xffff, 6, onWarningLevelChange, enumStrWarnAt };
EnumMenuItem menuWarnAt(&minfoWarnAt, 0, &menuCutOffLevel);
RENDERING_CALLBACK_NAME_INVOKE(fnSettingsRtCall, backSubItemRenderFn, "Settings", -1, NO_CALLBACK)
const PROGMEM SubMenuInfo minfoSettings = { "Settings", 17, 0xffff, 0, NO_CALLBACK };
BackMenuItem menuBackSettings(fnSettingsRtCall, &menuWarnAt);
SubMenuItem menuSettings(&minfoSettings, &menuBackSettings, NULL);
const char enumStrMode_0[] PROGMEM = "Interceptor";
const char enumStrMode_1[] PROGMEM = "Alarm";
const char enumStrMode_2[] PROGMEM = "Meter";
const char* const enumStrMode[] PROGMEM  = { enumStrMode_0, enumStrMode_1, enumStrMode_2 };
const PROGMEM EnumMenuInfo minfoMode = { "Mode", 18, 0xffff, 2, onModeChange, enumStrMode };
EnumMenuItem menuMode(&minfoMode, 0, &menuSettings);

// Set up code

void setupMenu() {
    renderer.setUpdatesPerSecond(5);
    switches.initialise(internalDigitalIo(), true);
    menuMgr.initForEncoder(&renderer, &menuMode, 2, 3, 21);
    renderer.setTitleMode(BaseGraphicalRenderer::TITLE_FIRST_ROW);
    renderer.setUseSliderForAnalog(true);
    installCoolBlueTraditionalTheme(renderer, MenuFontDef(nullptr, 1), MenuFontDef(nullptr, 1), true);
}

